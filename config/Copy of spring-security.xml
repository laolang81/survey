<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">



	<http access-denied-page="/403.jsp"><!-- 当访问被拒绝时，会转到403.jsp -->
		<intercept-url pattern="/login.jsp" filters="none" />
		<!-- login-page表示用户登陆时显示我们自定义的login.action对应的页面。 
		authentication-failure-url表示用户登陆失败时，跳转到哪个action。 
			当用户输入的登录名和密码不正确时，系统将再次跳转到/login.action，并添加一个error=true参数作为登陆失败的标示。 
			default-target-url表示登陆成功时，跳转的url。 -->
		<form-login login-page="/admin/login"
			authentication-failure-url="/admin/login"
			default-target-url="/admin" />
		<logout logout-success-url="/login.jsp" />
		<http-basic />
		<!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="myFilter" />
	</http>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 
		我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<beans:bean id="myFilter"
		class="com.robin.erp.fwk.security.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>

	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="myUserDetailService">
			<!-- 如果用户的密码采用加密的话，可以加点“盐” <password-encoder hash="md5" /> -->
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="myUserDetailService"
		class="com.robin.erp.fwk.security.MyUserDetailService" />

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManagerBean"
		class="com.robin.erp.fwk.security.MyAccessDecisionManager">
	</beans:bean>

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource"
		class="com.robin.erp.fwk.security.MyInvocationSecurityMetadataSource" />

</beans:beans>

