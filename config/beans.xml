<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" />

	<context:component-scan
		base-package="com.sniper.survey.dao.impl,com.sniper.survey.service.impl,com.sniper.survey.struts2.action,com.sniper.survey.listener" />


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>

		<property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>
		<property name="minPoolSize" value="${c3p0.minPoolSize}"></property>
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}"></property>
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}"></property>
	</bean>

	<!-- 呢目的会话工厂bean(spring整合hinernate的核心入口) -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<!-- 注解 -->
		<property name="packagesToScan">
			<list>
				<value>com.sniper.survey.model</value>
			</list>
		</property>
		<!-- xx.hbm.xml形式 -->
		<!-- <property name="mappingDirectoryLocations"> <list> <value>classpath:com.sniper.survey.model</value> 
			</list> </property> -->

	</bean>
	<!-- hibernate事务管理器,用来在service层面上实现事务管理,实现平台无关行 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 事物通知 -->
	<!-- rollback-for回滚事物，果存在一个事务，则支持当前事务。如果没有事务则开启 -->
	<!-- aopalliance-1.0 需要这个包否则报错，这个包在struts里面 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="Exception" />
			<tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="Exception" />

			<tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT"
				read-only="true" rollback-for="Exception" />
			<tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT"
				read-only="true" rollback-for="Exception" />
			<tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT"
				read-only="true" rollback-for="Exception" />

			<!-- <tx:method name="*" propagation="NOT_SUPPORTED" isolation="DEFAULT" 
				read-only="true"/> -->
			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" />
		</tx:attributes>
	</tx:advice>
	<!-- 事物切入 -->
	<!-- <aop:config proxy-target-class="true"> -->
	<!-- * *.*Service.*.*(..)) 解释 * 返回值类型 *任何包和子包..包和类的结合 包含service. *r任何方法(..)参数不显 -->
	<!-- <aop:pointcut id="cut" expression="execution(* *.*Service.*.*(..))" 
		/> -->
	<!-- <aop:pointcut id="cut" expression="execution(* com.sniper.survey.service.impl.*.*(..))" 
		/> -->
	<!-- <aop:advisor advice-ref="txAdvice" pointcut-ref="cut" /> </aop:config> -->
	<!-- 切入点通知 -->
	<!-- 日志记录 -->
	<bean id="logger" class="com.sniper.survey.advice.Logger" />

	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))" />
		<aop:aspect id="loggerAspect" ref="logger">
			<aop:around method="record"
				pointcut="(execution(* *..*Service.save*(..)) 
											or execution(* *..*Service.update*(..))
											or execution(* *..*Service.delete*(..))
											or execution(* *..*Service.batch*(..))
											or execution(* *..*Service.new*(..))
											or execution(* *..*Service.move*(..)) 
											or execution(* *..*Service.clear*(..))
											or execution(* *..*Service.toggle*(..)))
											and !bean(logService)
											" />
		</aop:aspect>

	</aop:config>

</beans>