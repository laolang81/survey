<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<global-method-security pre-post-annotations="enabled" />
	
	<http pattern="/" security="none" />
	<http pattern="/admin/login" security="none"  />
	<http pattern="/myfiles/**" security="none" />

	<http auto-config="true" use-expressions="true"
		access-denied-page="/403.jsp">
		<!-- 匿名授权 -->
		<intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<!-- <form-login/> -->
		<form-login login-page="/admin/login"
			authentication-failure-url="/admin/login?error=true"
			default-target-url="/admin" />

		<!-- /j_spring_security_logout, 注销页面 -->
		<logout logout-success-url="/admin/login" delete-cookies="JSESIONID" />
		<!-- <remember-me /> -->

		<http-basic />
		<csrf/>
		<!-- 检测session是否可用的地址 max-sessions=1配合单用户登录最大session个数=1 -->
		<!-- session-fixation-protection 解决session伪造  -->
		<!-- error-if-maximum-exceeded 解决单一登录，不提出第一个登录 -->
		<session-management session-fixation-protection="none" >
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>
		<!-- 设置验证filter -->
		<custom-filter ref="mySniperFilter" before="FILTER_SECURITY_INTERCEPTOR" />

	</http>

	<!-- 配置过滤器 -->
	<beans:bean id="mySniperFilter"
		class="com.sniper.survey.spring.security.MyFilterSecurityInterceptor"
		autowire="byName">
		<!-- 用户拥有的权限 -->
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />

	</beans:bean>

	<!-- 认真管理器，实现用户认证的入口，主要实现USerDetailsService 接口即可 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="myUserDetailServiceImpl">
			<password-encoder hash="md5"></password-encoder>
			
		</authentication-provider>
	</authentication-manager>

	<!-- 读取用户的密码，角色信息，是否锁定，账号是否过期 -->
	<beans:bean id="myUserDetailServiceImpl"
		class="com.sniper.survey.spring.security.myUserDetailService">
		<beans:constructor-arg name="adminUserService" ref="adminUserService"></beans:constructor-arg>
	</beans:bean>

	<!-- 访问决策其，决定那个用户具有的角色，是否足够权限访问 -->
	<beans:bean id="myAccessDecisionManagerBean"
		class="com.sniper.survey.spring.security.myAccessDecisionManagerBean" />
	<!-- 资源数据定义，将所有的资源和权限对应关系建立起来，及定义木易资源可以被大写橘色访问 -->
	<beans:bean id="securityMetadataSource"
		class="com.sniper.survey.spring.security.MySecurityMetadataSource">
		<beans:constructor-arg name="adminRightService" ref="adminRightService"></beans:constructor-arg>
	</beans:bean>


</beans:beans>

