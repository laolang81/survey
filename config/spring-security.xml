<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/" security="none" />
	<http pattern="/admin/login**" security="none" />
	<http pattern="/myfiles/**" security="none" />
	<http pattern="/attachments/**" security="none" />
	<http pattern="/verify**" security="none" />
	

	<http auto-config="true" access-denied-page="/admin/errorNotRight"
		entry-point-ref="authenticationProcessingFilterEntryPoint">
		<!-- 匿名授权 -->
		<!--auto-config = true 则使用from-login. 如果不使用该属性 则默认为http-basic(没有session). -->
		<!-- lowercase-comparisons：表示URL比较前先转为小写。 -->
		<!-- path-type：表示使用Apache Ant的匹配模式。 -->
		<!--access-denied-page：访问拒绝时转向的页面。 -->
		<!-- access-decision-manager-ref：指定了自定义的访问策略管理器。 -->
		
		<intercept-url pattern="/admin**" access="ROLE_ADMIN" />
		
		<!-- <form-login/> -->
		<!-- username-parameter="j_username" password-parameter="j_password" login-processing-url="j_spring_security_check" -->
		<!-- <form-login login-page="/admin/login" authentication-failure-url="/admin/login?error=true" 
			default-target-url="/admin" username-parameter="username" password-parameter="password" 
			/> -->

		<!--login-page：指定登录页面。 -->
		<!-- login-processing-url：指定了客户在登录页面中按下 Sign In 按钮时要访问的 URL。 -->
		<!-- authentication-failure-url：指定了身份验证失败时跳转到的页面。 -->
		<!-- default-target-url：指定了成功进行身份验证和授权后默认呈现给用户的页面。 -->
		<!-- always-use-default-target：指定了是否在身份验证通过后总是跳转到default-target-url属性指定的URL。 -->
		<!-- /j_spring_security_logout, 注销页面 -->
		<!--logout-url：指定了用于响应退出系统请求的URL。其默认值为：/j_spring_security_logout。 -->
		<!-- logout-success-url：退出系统后转向的URL。 -->
		<!-- invalidate-session：指定在退出系统时是否要销毁Session。 -->
		<logout logout-success-url="/admin/login" delete-cookies="JSESSIONID" />
		<remember-me data-source-ref="dataSource_main" />

		<!-- <http-basic /> -->
		<!-- <csrf /> -->
		<!-- 检测session是否可用的地址 max-sessions=1配合单用户登录最大session个数=1 -->
		<!-- session-fixation-protection 解决session伪造 -->
		<!-- error-if-maximum-exceeded 解决单一登录，不提出第一个登录 -->
		<!-- max-sessions:允许用户帐号登录的次数。范例限制用户只能登录一次。 -->
		<!-- 此值表示：用户第二次登录时，前一次的登录信息都被清空。 -->
		<session-management session-fixation-protection="none">
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true"
				 />
		</session-management>
		<!-- 设置验证filter -->
		
		<custom-filter ref="myLoginFilter" before="FORM_LOGIN_FILTER" />
		<custom-filter ref="mySniperFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<!-- 配置过滤器 -->
	<beans:bean id="mySniperFilter"
		class="com.sniper.survey.spring.security.MyFilterSecurityInterceptor">
		<!-- 用户拥有的权限 -->
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>

	<!-- 认真管理器，实现用户认证的入口，主要实现USerDetailsService 接口即可 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="myUserDetail">
			<!-- 因为用户登录自定义，密码加密在自定义里面加密过了所以这里不用设置加密 -->
			<!-- <password-encoder hash="md5"> -->
				<!-- <salt-source user-property="username"/> <salt-source user-property="password"/> -->
			<!-- </password-encoder> -->
		</authentication-provider>
	</authentication-manager>

	<!-- 读取用户的密码，角色信息，是否锁定，账号是否过期 -->
	<beans:bean id="myUserDetail"
		class="com.sniper.survey.spring.security.myUserDetail">
		<beans:constructor-arg name="adminUserService"
			ref="adminUserService" />
	</beans:bean>

	<!-- 访问决策其，决定那个用户具有的角色，是否足够权限访问 -->
	<beans:bean id="myAccessDecisionManagerBean"
		class="com.sniper.survey.spring.security.myAccessDecisionManagerBean" />
	<!-- 资源数据定义，将所有的资源和权限对应关系建立起来，及定义木易资源可以被大写橘色访问 -->
	<beans:bean id="securityMetadataSource"
		class="com.sniper.survey.spring.security.MySecurityMetadataSource">
		<beans:property name="adminRightService" ref="adminRightService"></beans:property>
	</beans:bean>

	<beans:bean id="myLoginFilter"
		class="com.sniper.survey.spring.security.MyUsernamePasswordAuthenticationFilter">
		<!-- 处理登录 -->
		<beans:property name="filterProcessesUrl" value="/j_spring_security_checks" />
		<!-- 处理登录成功之后的处理 -->
		<beans:property name="authenticationSuccessHandler"
			ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<!-- 验证失败 -->
		<beans:property name="authenticationFailureHandler"
			ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
		<!-- 注入用户dao -->
		<beans:property name="adminUserService" ref="adminUserService"></beans:property>
	</beans:bean>

	<beans:bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/admin/meet-user/"></beans:property>
	</beans:bean>
	<beans:bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<!-- 可以配置相应的跳转方式。属性forwardToDestination为true采用forward false为sendRedirect -->
		<beans:property name="defaultFailureUrl" value="/admin/login?error=true"></beans:property>
	</beans:bean>

	<!-- 未登录的切入点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/admin/login"></beans:property>
	</beans:bean>
</beans:beans>

